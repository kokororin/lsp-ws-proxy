name: Upload Binaries

on:
  release:
    types: [created]

jobs:
  upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - name: linux_amd64
            os: ubuntu-latest
            bin_file: lsp-ws-proxy
          - name: darwin_amd64
            os: macos-latest
            bin_file: lsp-ws-proxy
          - name: windows_amd64
            os: windows-latest
            bin_file: lsp-ws-proxy.exe

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked

      - run: cd target/release && tar czf ${{ matrix.bin_file }}.tar.gz ${{ matrix.bin_file }}

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/release/${{ matrix.bin_file }}.tar.gz
          asset_name: lsp-ws-proxy_${{ matrix.name }}.tar.gz
          asset_content_type: application/octet-stream

  upload_musl:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl]
        include:
          - name: linux_amd64_musl
            target: x86_64-unknown-linux-musl
          - name: linux_aarch64_musl
            target: aarch64-unknown-linux-musl
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
          profile: minimal
          target: ${{ env.TARGET }}
      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target ${{ env.TARGET }}

      - run: cd target/${{ env.TARGET }}/release && tar czf lsp-ws-proxy.tar.gz lsp-ws-proxy

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/${{ env.TARGET }}/release/lsp-ws-proxy.tar.gz
          asset_name: lsp-ws-proxy_${{ matrix.name }}.tar.gz
          asset_content_type: application/octet-stream
